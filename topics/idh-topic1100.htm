<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Model Plugin</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?15ccea6e"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 1100;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps5"><span class="ts16">//## </span><span class="ts17">Description:</span><span class="ts18">&nbsp;</span><span class="ts24">Model plug-in template.</span><br /><span class="ts16">//## </span><span class="ts17">Credits:</span><span class="ts18">&nbsp;</span><span class="ts24">Tekla Corporation (Tekla OpenAPI Startup Package)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps6"><br /><span class="ts19">//Hint: Add the following Dlls to references:</span><br /><span class="ts19">//&quot;Tekla.Structures.dll&quot;</span><br /><span class="ts19">//&quot;Tekla.Structures.Model.dll&quot;</span><br /><span class="ts19">//&quot;Tekla.Structures.Plugins.dll&quot;</span><br /><span class="ts19">//&quot;Tekla.Structures.Dialogs.dll&quot;</span><br /><span class="ts19">//Location1: ~\[version]\nt\bin\plugins</span><br /><span class="ts19">//Location2: ~\[version]\nt\bin\dialogs</span><br /><span class="ts19">//------------------------------------------------</span><br /><br /><span class="ts20">using</span><span class="ts21">&nbsp;System;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;System.Collections;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;System.Collections.Generic;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;System.Windows.Forms;</span><br /><br /><span class="ts20">using</span><span class="ts21">&nbsp;Tekla.Structures.Plugins;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;Tekla.Structures.Model;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;Tekla.Structures.Geometry3d;</span><br /><span class="ts20">using</span><span class="ts21">&nbsp;Tekla.Structures.Model.UI;</span><br /><br /><span class="ts20">namespace</span><span class="ts21">&nbsp;safeprojectname </span><span class="ts19">//Your unique project name</span><br /><span class="ts21">{</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts20">class</span><span class="ts21">&nbsp;</span><span class="ts55">PluginData</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Fields</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// Define the fields specified on the Form.</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">/* Some examples:</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarName&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string RebarName;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarSize&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string RebarSize;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarGrade&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string RebarGrade;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarBendingRadius&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public string RebarBendingRadius;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarClass&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public int RebarClass;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(&quot;RebarSpacing&quot;)]</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public double RebarSpacing;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp; [Plugin(</span><span class="ts22">&quot;safename&quot;</span><span class="ts21">)] </span><span class="ts19">//Your unique plugin name</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; [PluginUserInterface(</span><span class="ts22">&quot;safeprojectname.MainForm&quot;</span><span class="ts21">)]</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts20">class</span><span class="ts21">&nbsp;</span><span class="ts55">safeprojectname</span><span class="ts21">&nbsp;: PluginBase</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Fields</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;Model _Model;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;PluginData _Data;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// Define variables for the field values.</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">/* Some examples:</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string _RebarName = string.Empty;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string _RebarSize = string.Empty;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private string _RebarGrade = string.Empty;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private ArrayList _RebarBendingRadius = new ArrayList();</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private int _RebarClass = new int();</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private double _RebarSpacing;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Properties</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;Model Model</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">get</span><span class="ts21">&nbsp;{ </span><span class="ts20">return</span><span class="ts21">&nbsp;</span><span class="ts20">this</span><span class="ts21">._Model; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">set</span><span class="ts21">&nbsp;{ </span><span class="ts20">this</span><span class="ts21">._Model = value; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;PluginData Data</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">get</span><span class="ts21">&nbsp;{ </span><span class="ts20">return</span><span class="ts21">&nbsp;</span><span class="ts20">this</span><span class="ts21">._Data; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">set</span><span class="ts21">&nbsp;{ </span><span class="ts20">this</span><span class="ts21">._Data = value; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Constructor</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts55">safeprojectname</span><span class="ts21">(PluginData data)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Model = </span><span class="ts20">new</span><span class="ts21">&nbsp;Model();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data = data;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Overrides</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts20">override</span><span class="ts21">&nbsp;List&lt;InputDefinition&gt; DefineInput()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// This is an example for selecting two points; change this to suit your needs.</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;InputDefinition&gt; MyInputList = </span><span class="ts20">new</span><span class="ts21">&nbsp;List&lt;InputDefinition&gt;();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picker Picker = </span><span class="ts20">new</span><span class="ts21">&nbsp;Picker();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ArrayList PickedPoints = Picker.PickPoints(Picker.PickPointEnum.PICK_TWO_POINTS);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyInputList.Add(</span><span class="ts20">new</span><span class="ts21">&nbsp;InputDefinition(PickedPoints));</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">return</span><span class="ts21">&nbsp;MyInputList;</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">////Hint1: single &quot;point&quot; input:</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Picker MyPicker1 = new Picker();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Point point1 = MyPicker1.PickPoint();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//InputDefinition Input1 = new InputDefinition(point1);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//MyInputList.Add(Input1);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">////Hint2: single &quot;part&quot; input:</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Picker MyPicker2 = new Picker();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//ModelObject mo = MyPicker2.PickObject(Picker.PickObjectEnum.PICK_ONE_PART);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//InputDefinition Input2 = new InputDefinition(mo.Identifier);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//MyInputList.Add(Input2);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts20">override</span><span class="ts21">&nbsp;</span><span class="ts20">bool</span><span class="ts21">&nbsp;Run(List&lt;InputDefinition&gt; Input)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">try</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetValuesFromDialog();</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">if</span><span class="ts21">&nbsp;(Input.Count &gt; 0)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// This is an example for selecting two points; change this to suit your needs.</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ArrayList Points = (ArrayList)Input[0].GetInput();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point StartPoint = Points[0] </span><span class="ts20">as</span><span class="ts21">&nbsp;Point;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point EndPoint = Points[1] </span><span class="ts20">as</span><span class="ts21">&nbsp;Point;</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// Write your code here; better yet, create private methods and call them from here.</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">catch</span><span class="ts21">&nbsp;(Exception Exc)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts62">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">&nbsp;MessageBox.Show(Exc.ToString());</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">return</span><span class="ts21">&nbsp;</span><span class="ts20">true</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#region</span><span class="ts21">&nbsp;Private methods</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">///</span><span class="ts19">&nbsp;</span><span class="ts60">&lt;summary&gt;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">///</span><span class="ts19">&nbsp;Gets the values from the dialog and sets the default values if needed</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">///</span><span class="ts19">&nbsp;</span><span class="ts60">&lt;/summary&gt;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;GetValuesFromDialog()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">/* Some examples:</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarName = Data.RebarName;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarSize = Data.RebarSize;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarGrade = Data.RebarGrade;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; char[] Parameters = { ' ' };</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; string[] Radiuses = Data.RebarBendingRadius.Split(Parameters, StringSplitOptions.RemoveEmptyEntries);</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach (string Item in Radiuses)</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarBendingRadius.Add(Convert.ToDouble(Item));</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarClass = Data.RebarClass;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarSpacing = Data.RebarSpacing;</span><br /><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsDefaultValue(_RebarName))</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarName = &quot;REBAR&quot;;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsDefaultValue(_RebarSize))</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarSize = &quot;12&quot;;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsDefaultValue(_RebarGrade))</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarGrade = &quot;Undefined&quot;;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (_RebarBendingRadius.Count &lt; 1)</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarBendingRadius.Add(30.00);</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsDefaultValue(_RebarClass) || _RebarClass &lt;= 0)</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarClass = 99;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (IsDefaultValue(_RebarSpacing) || _RebarSpacing &lt;= 0)</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _RebarSpacing = 200.0;</span><br /><span class="ts19">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// Write your private methods here.</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts60">#endregion</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">////INP UI (if needed)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//public class UserInterfaceDefinitions</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//{</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//&nbsp;&nbsp;&nbsp; public const string Plugin1 = &quot;&quot;;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//}</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; }</span><br /><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Simple Windows Form UI (change this to suit your needs) :</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts20">class</span><span class="ts21">&nbsp;</span><span class="ts55">MainForm</span><span class="ts21">&nbsp;: Tekla.Structures.Dialog.PluginFormBase</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">public</span><span class="ts21">&nbsp;</span><span class="ts55">MainForm</span><span class="ts21">()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;InitializeComponent()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel = </span><span class="ts20">new</span><span class="ts21">&nbsp;Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1 = </span><span class="ts20">new</span><span class="ts21">&nbsp;Tekla.Structures.Dialog.UIControls.SaveLoad();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// OkApplyModifyGetOnOffCancel</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeName(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeTypeName(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetBindPropertyName(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.Dock = System.Windows.Forms.DockStyle.Bottom;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.Location = </span><span class="ts20">new</span><span class="ts21">&nbsp;System.Drawing.Point(0, 234);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.Name = </span><span class="ts22">&quot;OkApplyModifyGetOnOffCancel&quot;</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.Size = </span><span class="ts20">new</span><span class="ts21">&nbsp;System.Drawing.Size(558, 29);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.OkClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_OkClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.ApplyClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_ApplyClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.ModifyClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_ModifyClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.GetClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_GetClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.OnOffClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_OnOffClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel.CancelClicked += </span><span class="ts20">new</span><span class="ts21">&nbsp;System.EventHandler(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel_CancelClicked);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// saveLoad1</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeName(</span><span class="ts20">this</span><span class="ts21">.saveLoad1, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeTypeName(</span><span class="ts20">this</span><span class="ts21">.saveLoad1, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetBindPropertyName(</span><span class="ts20">this</span><span class="ts21">.saveLoad1, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.Dock = System.Windows.Forms.DockStyle.Top;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.HelpFileType = Tekla.Structures.Dialog.UIControls.SaveLoad.HelpFileTypeEnum.General;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.HelpKeyword = </span><span class="ts22">&quot;&quot;</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.HelpUrl = </span><span class="ts22">&quot;&quot;</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.Location = </span><span class="ts20">new</span><span class="ts21">&nbsp;System.Drawing.Point(0, 0);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.Name = </span><span class="ts22">&quot;saveLoad1&quot;</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.SaveAsText = </span><span class="ts22">&quot;&quot;</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.Size = </span><span class="ts20">new</span><span class="ts21">&nbsp;System.Drawing.Size(558, 43);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.saveLoad1.UserDefinedHelpFilePath = </span><span class="ts20">null</span><span class="ts21">;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// MainForm</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">// </span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeName(</span><span class="ts20">this</span><span class="ts21">, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetAttributeTypeName(</span><span class="ts20">this</span><span class="ts21">, </span><span class="ts20">null</span><span class="ts21">);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.structuresExtender.SetBindPropertyName(</span><span class="ts20">this</span><span class="ts21">, </span><span class="ts20">null</span><span class="ts21">&nbsp;);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.ClientSize = </span><span class="ts20">new</span><span class="ts21">&nbsp;System.Drawing.Size(558, 263);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Add another controls here:</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Controls.Add(</span><span class="ts20">this</span><span class="ts21">.OkApplyModifyGetOnOffCancel);</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Controls.Add(</span><span class="ts20">this</span><span class="ts21">.saveLoad1);</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Defining needed fields on form:</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;Tekla.Structures.Dialog.UIControls.SaveLoad saveLoad1;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel OkApplyModifyGetOnOffCancel;</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_OkClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Apply();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Close();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_ApplyClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Apply();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_ModifyClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Modify();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_GetClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Get();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_OnOffClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.ToggleSelection();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">private</span><span class="ts21">&nbsp;</span><span class="ts20">void</span><span class="ts21">&nbsp;OkApplyModifyGetOnOffCancel_CancelClicked(</span><span class="ts20">object</span><span class="ts21">&nbsp;sender, EventArgs e)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">this</span><span class="ts21">.Close();</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts21">}</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts10">&nbsp;</span></p>
</body>
</html>