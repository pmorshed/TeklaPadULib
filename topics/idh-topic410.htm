<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Washer list by GUID</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?6ca1f615"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 410;
</script>
</head>
<body>
<p class="ps0"><html>
<style>
pre {
	width: 100%;
	padding: 0;
	color: #0066ff;
	margin: 0;
	overflow: auto;
	overflow-y: hidden;
	font-size: 11px;
	font-family: monospace;
	line-height: 16px;
	border: 1px solid #777;
}
</style>
<body>
<pre>

// #############################################################
// ### Author: TeklaPad
// ### Desc.: Washer list by GUID
// ### Compatibility: TS18 or newer
// #############################################################

//Hint: washer1/washer2/washer3 may have different standards (depends on bolt assembly catalog)
//Gathering data for Washers1:
var washer1 = from n in Database.OfType&ltBoltGroup&gt()
//Filtering washer1:
where n.Bolt==true && n.Washer1 == true
//Defining required columns:
let InnerD = n.GetTeklaReport("washer.inner diameter1")
let Name = n.GetTeklaReport("washer.name1")
let No = n.GetTeklaReport("washer.number1")
let weight = n.GetTeklaReport("washer.weight1", 4)*No
let PhaseNumber = n.GetTeklaReport("phase")
let location = "Washer1"
//Selecting a new table (from orginal database) with required columns:
select new { Name, InnerD, PhaseNumber, No, weight, location, n.Identifier.GUID };
	        
//Gathering data for Washers2:
var washer2 = from n in Database.OfType&ltBoltGroup&gt()
//Filtering washer2:
where n.Bolt==true && n.Washer2 == true
//Defining required columns
let InnerD = n.GetTeklaReport("washer.inner diameter2")
let Name = n.GetTeklaReport("washer.name2")
let No = n.GetTeklaReport("washer.number2")
let weight = n.GetTeklaReport("washer.weight2", 4)*No
let PhaseNumber = n.GetTeklaReport("phase")
let location = "Washer2"
//Selecting a new table (from orginal database) with required columns:
select new { Name, InnerD, PhaseNumber, No, weight, location, n.Identifier.GUID };

//Gathering data for Washers3:
var washer3 = from n in Database.OfType&ltBoltGroup&gt()
//Filtering washer3:
where n.Bolt==true && n.Washer3 == true
//Defining required columns
let InnerD = n.GetTeklaReport("washer.inner diameter3")
let Name = n.GetTeklaReport("washer.name3")
let No = n.GetTeklaReport("washer.number3")
let weight = n.GetTeklaReport("washer.weight3", 4)*No
let PhaseNumber = n.GetTeklaReport("phase")
let location = "Washer3"
//Selecting a new table (from orginal database) with required columns:
select new { Name, InnerD, PhaseNumber, No, weight, location, n.Identifier.GUID };

//Concatenating three lists (Hint: Lists must have same column names for concatenating):
var result = washer1.Concat(washer2).Concat(washer3);
//Passing the final result to the gridView:
return result;

</pre>
</body>
</html></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts12">Usage:</span></p>
<p><img width="550" height="171" border="0" src="images/image(32).png" /></p>
<p class="ps0"><span class="ts11">&nbsp;</span></p>
<p class="ps0"><span class="ts12">Usage:</span></p>
<p><img width="550" height="232" border="0" src="images/image(33).png" /></p>
</body>
</html>