<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Split polygon weld</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?6ca1f615"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 700;
</script>
</head>
<body>
<p class="ps0"><html>
<style>
pre {
	width: 100%;
	padding: 0;
	color: #0066ff;
	margin: 0;
	overflow: auto;
	overflow-y: hidden;
	font-size: 11px;
	font-family: monospace;
	line-height: 16px;
	border: 1px solid #777;
}
</style>
<body>
<pre>

// ####################################
// ### Credits: Tekla Corporation
// ### Desc.: Split polygon weld
// ####################################

//Hint: Add the following Dlls to references:
//"Tekla.Structures.dll"
//"Tekla.Structures.Model.dll"
//Location: ~\[version]\nt\bin\plugins

using System;
using System.Collections;
using System.Windows.Forms;
//Tekla namespaces:
using Tekla.Structures.Geometry3d;
using Tekla.Structures.Model;
using Tekla.Structures.Model.Operations;
using Tekla.Structures.Model.UI;

class MyClass
{
	//Entry point of application:
	static void Main()
	{
		try
		{
			//Creating a form with a button:
			Form myForm = new Form();
			myForm.Text = "My application";
			myForm.BackColor = System.Drawing.Color.CornflowerBlue;
			Button splitPolygonWeldButton = new Button();
			splitPolygonWeldButton.Text = "Select polygonal weld";
			splitPolygonWeldButton.Dock = DockStyle.Top;
			splitPolygonWeldButton.BackColor = System.Drawing.Color.Green;
			splitPolygonWeldButton.ForeColor = System.Drawing.Color.Yellow;
			splitPolygonWeldButton.Click += new EventHandler(splitPolygonWeldButtonClick);

			myForm.Controls.Add(splitPolygonWeldButton);
			myForm.ShowDialog();
		}
		catch (Exception)
		{}
	}

	static void splitPolygonWeldButtonClick(object sender, EventArgs e)
	{
		try
		{
			var picker = new Picker();
			var modelObject = picker.PickObject(Picker.PickObjectEnum.PICK_ONE_WELD);

			if (modelObject != null && modelObject is PolygonWeld)
			{
				var polygonWeld = modelObject as PolygonWeld;

				if (!SplitPolygonWeld(polygonWeld))
				{
					MessageBox.Show("Splitting couldn't be completed.");
				}

				new Model().CommitChanges();
			}
		}
		catch (Exception exception)
		{
			if (exception.Message != "User interrupt.")
			{
				//MessageBox.Show(exception.ToString());
			}
		}

	}

	private static bool SplitPolygonWeld(PolygonWeld polygonWeld)
	{
		if (polygonWeld != null && polygonWeld.Polygon.Points.Count > 1)
		{
			var points = polygonWeld.Polygon.Points;

			var newPoints = new ArrayList();
			newPoints.Add(points[0]);
			newPoints.Add(points[1]);

			// Modify the original weld to be the first segment
			polygonWeld.Polygon.Points = newPoints;
			if (!polygonWeld.Modify())
			{
				return false;
			}

			// Create copies of the original one for each segment
			for (var i = 1; i < points.Count - 1; i++)
			{
				var polygonPoints = new ArrayList();
				polygonPoints.Add(points[i]);
				polygonPoints.Add(points[i + 1]);
				var newModelObject = Operation.CopyObject(polygonWeld, new Vector(0, 0, 0));

				if (newModelObject != null && newModelObject is PolygonWeld)
				{
					var newPolygonWeld = newModelObject as PolygonWeld;
					newPolygonWeld.Polygon.Points = polygonPoints;
					if (!newPolygonWeld.Modify())
					{
						return false;
					}
				}
			}
		}

		return true;
	}
}

</pre>
</body>
</html></p>
</body>
</html>