<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Cast unit rebars with pull-out picture by pos</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?e4c553dc"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 520;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps5"><span class="ts17">//## </span><span class="ts18">Author:</span><span class="ts19">&nbsp;TeklaPad</span><br /><span class="ts17">//## </span><span class="ts18">Description:</span><span class="ts19">&nbsp;</span><span class="ts25">Cast-unit rebars with pull-out picture by pos.</span><br /><span class="ts17">//## </span><span class="ts18">Compatibility:</span><span class="ts19">&nbsp;TS18 or newer</span><br /><span class="ts17">//## Hint:</span><span class="ts25">&nbsp;Make sure that numbering of objects is up to date. </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps6"><br /><span class="ts20">//Walking through database items(selected items) and filtering &quot;Assemblies&quot;:</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;result = </span><span class="ts21">from</span><span class="ts22">&nbsp;a </span><span class="ts21">in</span><span class="ts22">&nbsp;Database.OfType&lt;Assembly&gt;()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">from</span><span class="ts22">&nbsp;Part p </span><span class="ts21">in</span><span class="ts22">&nbsp;a.PartList()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">from</span><span class="ts22">&nbsp;Reinforcement r </span><span class="ts21">in</span><span class="ts22">&nbsp;p.GetReinforcements().GetArray()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Removing strands&nbsp;and invalid shapes:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">where</span><span class="ts22">&nbsp;r.GetType().Name != </span><span class="ts23">&quot;RebarStrand&quot;</span><span class="ts22">&nbsp;&amp;&amp; r.IsGeometryValid()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Grouping by rebar pos and grade:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;key1 = r.GetTeklaReport(</span><span class="ts23">&quot;rebar pos&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;key2 = r.GetTeklaReport(</span><span class="ts23">&quot;grade&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">group</span><span class="ts22">&nbsp;r </span><span class="ts21">by</span><span class="ts22">&nbsp;</span><span class="ts21">new</span><span class="ts22">&nbsp;{ key1, key2 } </span><span class="ts21">into</span><span class="ts22">&nbsp;g</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;rebar = g.First()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//-----------------------------------------------------------------</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Defining required columns:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Size = rebar.GetTeklaReport(</span><span class="ts23">&quot;size&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Pos = g.Key.key1</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Grade = g.Key.key2</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Shape = rebar.GetTeklaReport(</span><span class="ts23">&quot;shape&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Pcs = g.Sum(x =&gt; x.GetNumberOfRebars()) </span><span class="ts20">//or g.Sum(x =&gt; x.GetTeklaReport(&quot;number&quot;))</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Unitlength = rebar.IsTapered() ? </span><span class="ts23">&quot;VAR&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;length&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;UnitWeight = rebar.IsTapered() ? </span><span class="ts23">&quot;VAR&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;weight&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;TotalWeight = g.Sum(x =&gt; x.WeightInGroup(5)) </span><span class="ts20">//Precision: 5</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;TotalLength = g.Sum(x =&gt; x.LengthInGroup(5)) </span><span class="ts20">//Precision: 5</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;pic = rebar.GetTeklaPullOut()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">select</span><span class="ts22">&nbsp;</span><span class="ts21">new</span><span class="ts22">&nbsp;{ Pos, Size, Grade, Shape, Pcs, Unitlength, TotalLength, UnitWeight, TotalWeight, pic };</span><br /><span class="ts20">//Passing the final result to the data grid:</span><br /><span class="ts21">return</span><span class="ts22">&nbsp;result;</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts10">&nbsp;</span></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts24">Usage:</span></p>
<p><img width="570" height="238" border="0" src="images/image(44).png" /></p>
<p class="ps0"><span class="ts10">&nbsp;</span></p>
<p class="ps0"><span class="ts24">Usage:</span></p>
<p><img width="570" height="257" border="0" src="images/image(45).png" /></p>
</body>
</html>