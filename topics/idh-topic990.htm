<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Trim/Extend beams</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?5b1cb8b7"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 990;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps4"><span class="ts17">//## </span><span class="ts18">Author:</span><span class="ts19">&nbsp;TeklaPad</span><br /><span class="ts17">//## </span><span class="ts18">Description:</span><span class="ts25">&nbsp;Trimming/extending secondary beams to main beam. </span><br /><span class="ts17">//## </span><span class="ts18">Compatibility:</span><span class="ts19">&nbsp;TS18 or newer</span><br /><span class="ts36">//## Hint:</span><span class="ts25">&nbsp;The order of selection matters.</span><br /><span class="ts36">//## Hint:</span><span class="ts25">&nbsp;The selection </span><span class="ts19">sequence is terminated by the middle button pick.</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps5"><br /><span class="ts22">Model m1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;Model();</span><br /><span class="ts20">//Picking one beam:</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;MainBeam = m1.PickObjectOfType&lt;Beam&gt;(</span><span class="ts23">&quot;Picke the main beam&quot;</span><span class="ts22">);</span><br /><br /><span class="ts20">//Picking other beams:</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;SecondaryBeams = m1.PickObjectsOfType&lt;Beam&gt;(</span><span class="ts23">&quot;Pick secondary beams. then Press the Middle Mouse Button When Done&quot;</span><span class="ts22">);</span><br /><br /><span class="ts21">var</span><span class="ts22">&nbsp;Xdist = MainBeam.StartPoint.X - MainBeam.EndPoint.X;</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;Ydist = MainBeam.StartPoint.Y - MainBeam.EndPoint.Y;</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;Vector1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;Vector(Xdist, Ydist, 0);</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;Plane1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;GeometricPlane(MainBeam.StartPoint, Vector1, </span><span class="ts21">new</span><span class="ts22">&nbsp;Vector(0, 0, 1));</span><br /><br /><span class="ts21">foreach</span><span class="ts22">&nbsp;(var item </span><span class="ts21">in</span><span class="ts22">&nbsp;SecondaryBeams)</span><br /><span class="ts22">{</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">var</span><span class="ts22">&nbsp;IntersectPoint = Intersection.LineToPlane(</span><span class="ts21">new</span><span class="ts22">&nbsp;Line(item.StartPoint, item.EndPoint), Plane1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">var</span><span class="ts22">&nbsp;HelperLine = </span><span class="ts21">new</span><span class="ts22">&nbsp;Line(IntersectPoint, </span><span class="ts21">new</span><span class="ts22">&nbsp;Point(IntersectPoint.X, IntersectPoint.Y, IntersectPoint.Z + 100));</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; LineSegment Lineseg1 = Intersection.LineToLine(HelperLine, </span><span class="ts21">new</span><span class="ts22">&nbsp;Line(MainBeam.StartPoint, MainBeam.EndPoint));</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">var</span><span class="ts22">&nbsp;D1 = Distance.PointToPoint(item.StartPoint, Lineseg1.Point1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">var</span><span class="ts22">&nbsp;D2 = Distance.PointToPoint(item.EndPoint, Lineseg1.Point1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Modifying the handle that is closer to main part:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Hint: if D1=D2 then both main and sec. beams are in parallel planes. </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">if</span><span class="ts22">&nbsp;(D1 &lt; D2)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item.StartPoint = Lineseg1.Point1;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item.Modify();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">if</span><span class="ts22">&nbsp;(D1 &gt; D2)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item.EndPoint = Lineseg1.Point1;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; item.Modify();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">}</span><br /><span class="ts22">m1.CommitChanges();</span><br /><span class="ts20">//Passing nothing to data grid:</span><br /><span class="ts21">return</span><span class="ts22">&nbsp;</span><span class="ts21">null</span><span class="ts22">;</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts16">&nbsp;</span></p>
<div>
  <div class="hline0"></div>
</div>
<p><img width="510" height="344" border="0" src="images/trimextendcommand.png" /></p>
</body>
</html>