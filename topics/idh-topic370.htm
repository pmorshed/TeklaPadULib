<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Bolt list with connected parts</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?4d16057b"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 370;
</script>
</head>
<body>
<p class="ps0"><html>
<style>
pre {
	width: 100%;
	padding: 0;
	color: #0066ff;
	margin: 0;
	overflow: auto;
	overflow-y: hidden;
	font-size: 11px;
	font-family: monospace;
	line-height: 16px;
	border: 1px solid #777;
}
</style>
<body>
<pre>

// #############################################################
// ### Author: TeklaPad
// ### Desc.: Bolt list with connected parts
// ### Compatibility: TS18 or newer
// ### Hint: Make sure that numbering of objects is up to date.
// #############################################################

//Walking through database items(selected items) and filtering "Bolts":
var result = from n in Database.OfType&ltBoltGroup&gt()
//Removing holes:
where n.Bolt == true
//Define variables for grouping:
let key1 = n.GetTeklaReport("assembly pos")
let key2 = n.GetTeklaReport("name") //Contains [size]-[length]-[bolt standard]
let key3 = n.GetTeklaReport("connected parts")
//Bolt standard in bolt assembly catalog:
let key4 = n.BoltStandard
//Grouping by key1~4:
group n by new { key1, key2, key3, key4 } into g
//Defining required columns based on grouped variables:
let Assembly = g.Key.key1 + "(No.: " + g.Count() + " )"
let Bolt = g.Key.key2
let TotalNumber = g.Sum(x => x.GetTeklaReport("number"))
let ConnectedParts = g.Key.key3
let BoltAssembly = g.Key.key4
let Size = g.First().BoltSize
let length = g.First().GetTeklaReport("length")
//Selecting a new table (from orginal database) with required columns:
select new { Assembly, Bolt, BoltAssembly, Size,length, TotalNumber, ConnectedParts };
//Passing the final result to the gridview:
return result;

</pre>
</body>
</html></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts12">Usage:</span></p>
<p><img width="540" height="166" border="0" src="images/image(28).png" /></p>
</body>
</html>