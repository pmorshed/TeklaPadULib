<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Rebar bending schedule</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?16b7c0d8"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 1070;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps4"><span class="ts16">//## </span><span class="ts17">Author:</span><span class="ts18">&nbsp;TeklaPad</span><br /><span class="ts16">//## </span><span class="ts17">Description:</span><span class="ts18">&nbsp;Rebar bending schedule</span><br /><span class="ts16">//## Measurement units:</span><span class="ts24">&nbsp;Metric </span><br /><span class="ts16">//## </span><span class="ts17">Compatibility:</span><span class="ts18">&nbsp;TS18 or newer</span><br /><span class="ts16">//## Hint:</span><span class="ts24">&nbsp;Make sure that numbering of objects is up to date. </span><br /><span class="ts16">//## Hint:</span><span class="ts24">&nbsp;You can hide unused rebar sizes in data grid (right-click on header &gt; Hide column)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps5"><br /><span class="ts20">var</span><span class="ts21">&nbsp;result = </span><span class="ts20">from</span><span class="ts21">&nbsp;n </span><span class="ts20">in</span><span class="ts21">&nbsp;Database.OfType&lt;Part&gt;()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">from</span><span class="ts21">&nbsp;Reinforcement r </span><span class="ts20">in</span><span class="ts21">&nbsp;n.GetReinforcements().GetArray()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">where</span><span class="ts21">&nbsp;r.IsGeometryValid()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">group</span><span class="ts21">&nbsp;r </span><span class="ts20">by</span><span class="ts21">&nbsp;r.GetTeklaReport(</span><span class="ts22">&quot;rebar pos&quot;</span><span class="ts21">) </span><span class="ts20">into</span><span class="ts21">&nbsp;g</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;Pos = g.Key</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Keeping one instance (first one) from each group of data:</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;rebar = g.First()</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;Shape = rebar.GetTeklaPullOut(BendingAngle: </span><span class="ts20">false</span><span class="ts21">)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;Spec = rebar.GetTeklaReport(</span><span class="ts22">&quot;size&quot;</span><span class="ts21">)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;L_min = Math.Round(rebar.GetTeklaReport(</span><span class="ts22">&quot;length min&quot;</span><span class="ts21">) / 1000, 3)&nbsp; </span><span class="ts19">//converting to meter</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;L_max = Math.Round(rebar.GetTeklaReport(</span><span class="ts22">&quot;length max&quot;</span><span class="ts21">) / 1000, 3)&nbsp; </span><span class="ts19">//converting to meter</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;L = rebar.IsTapered() ? L_min + </span><span class="ts22">&quot;~&quot;</span><span class="ts21">&nbsp;+ L_max : L_min</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;No = g.Sum(x =&gt; x.GetTeklaReport(</span><span class="ts22">&quot;number&quot;</span><span class="ts21">))</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;W_Total = Math.Round(g.Sum(x =&gt; x.WeightInGroup(5)), 3)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;L_Total = Math.Round(g.Sum(x =&gt; x.LengthInGroup(5)) / 10000, 3)</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts19">//Defining existing rebar sizes (based on your project):</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T8 = Spec == </span><span class="ts22">&quot;8&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T10 = Spec == </span><span class="ts22">&quot;10&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T12 = Spec == </span><span class="ts22">&quot;12&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T14 = Spec == </span><span class="ts22">&quot;14&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T16 = Spec == </span><span class="ts22">&quot;16&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T18 = Spec == </span><span class="ts22">&quot;18&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T20 = Spec == </span><span class="ts22">&quot;20&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T22 = Spec == </span><span class="ts22">&quot;22&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">let</span><span class="ts21">&nbsp;T25 = Spec == </span><span class="ts22">&quot;25&quot;</span><span class="ts21">&nbsp;? L_Total.ToString() : </span><span class="ts22">&quot;-&quot;</span><br /><span class="ts21">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">select</span><span class="ts21">&nbsp;</span><span class="ts20">new</span><span class="ts21">&nbsp;{ Pos, Shape, L, No, T8, T10, T12, T14, T16, T18, T20, T22, T25 }; </span><span class="ts19">//Hint: You can hide unused rebar sizes in data grid</span><br /><span class="ts20">return</span><span class="ts21">&nbsp;result;</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts15">&nbsp;</span></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts23">Usage:</span></p>
<p><img width="355" height="333" border="0" src="images/image(71).png" /></p>
</body>
</html>