<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Console application</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?d2c0b536"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 80;
</script>
</head>
<body>
<div align="center">
  <table class="tbl0">
    <tr class="row0">
      <td class="cell3">
        <p><img width="120" height="120" border="0" src="images/libexe.png" /></p>
      </td>
      <td class="cell4">
        <p class="ps0"><span class="ts1">You can use second tab of TeklaPad to create console based applications.</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p class="ps1"><span class="ts3">&nbsp;</span></p>
        <p>&nbsp;</p>
      </td>
      <td class="cell5">
        <p>&nbsp;</p>
      </td>
      <td class="cell5">
        <p>&nbsp;</p>
      </td>
    </tr>
  </table>
</div>
<div align="center">
  <table class="tbl1">
    <tr class="row0">
      <td class="cell0">
        <p class="ps2"><span class="ts42">When you want to try something out quickly, or want to write a program/extension that doesn't need complicated features, you will often use a </span><span class="ts43">console</span><span class="ts42">&nbsp;</span><span class="ts43">application</span><span class="ts42">, because that's the simplest type of program you can write with C#. TeklaPad's C# console can help you in these cases.</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps0"><span class="ts44">How to create?</span></p>
        <p class="ps2"><span class="ts15">1- Choose a .NET Framework. Then, common assemblies will be added automatically.</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps8"><img width="150" height="63" border="0" src="images/tb2chooseframeworkmv2.png" /></p>
        <p class="ps9"><span class="ts10">&nbsp;</span></p>
        <p class="ps2"><span class="ts15">2- Add needed system or/and Tekla API assemblies.</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps8"><img width="149" height="204" border="0" src="images/tb2addv2.png" /></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps2"><span class="ts15">3- Choose &quot;EXE&quot;option from drop down list for your project.</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps8"><img width="279" height="65" border="0" src="images/outputtypeexev2(1).png" /></p>
        <p class="ps2"><span class="ts9">&nbsp;</span></p>
        <p class="ps2"><span class="ts15">4- Write your application code and run the project. If everything goes fine, the created *exe file will be placed on output folder.</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps8"><img width="205" height="26" border="0" src="images/openfolderv2.png" /></p>
        <p class="ps2"><span class="ts9">&nbsp;</span></p>
        <p class="ps0"><span class="ts10">&nbsp;</span></p>
        <p class="ps0"><img width="21" height="21" border="0" src="images/warnings.png" /><span class="ts44">Important:</span></p>
        <p class="ps2"><span class="ts15">All created *.exe files will be removed automatically after closing the TeklaPad.</span></p>
        <p class="ps2"><span class="ts15">So, you should move/copy your final program with its dependencies (Tekla.Structures.dll or...) to another location/folder (for later usages) before closing the TeklaPad.</span></p>
        <div>
          <div class="hline0"></div>
        </div>
        <p class="ps0"><span class="ts10">&nbsp;</span></p>
        <p class="ps0"><span class="ts45">Key concepts of &quot;Console&quot;:</span></p>
        <p class="ps0"><span class="ts46">&nbsp;</span></p>
        <p class="ps2"><span class="ts14">Hint-1:</span><span class="ts15">&nbsp;Each console application must have &quot;Main&quot; method (and </span><span class="ts42">It MUST be called &quot;Main&quot;</span><span class="ts15">):</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps2"><span class="ts47">static</span><span class="ts48">&nbsp;</span><span class="ts47">void</span><span class="ts48">&nbsp;Main()</span></p>
        <p class="ps2"><span class="ts48">{</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; </span><span class="ts49">//Your code...</span></p>
        <p class="ps2"><span class="ts48">}</span></p>
        <p class="ps2"><span class="ts50">&nbsp;</span></p>
        <p class="ps2"><span class="ts42">When the computer is asked to run a C# program, it needs to know where to start. It has been taught that, for C# programs, the programmer will always write a method called &quot;Main&quot; and that's where it must start. that's the entry point.</span></p>
        <p class="ps2"><span class="ts51">&nbsp;</span></p>
        <p class="ps2"><span class="ts14">Hint-2:</span><span class="ts15">&nbsp;You must put your methods in a &quot;</span><span class="ts9">class</span><span class="ts15">&quot; block. So, the general structure of your code should be something like this:</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps2"><span class="ts49">//Namespaces:</span></p>
        <p class="ps2"><span class="ts47">using</span><span class="ts48">&nbsp;System;</span></p>
        <p class="ps2"><span class="ts47">using</span><span class="ts48">&nbsp;System.Collections.Generic;</span></p>
        <p class="ps2"><span class="ts49">//using...</span></p>
        <p class="ps2"><span class="ts9">&nbsp;</span></p>
        <p class="ps2"><span class="ts47">class</span><span class="ts48">&nbsp;</span><span class="ts52">MyClass</span><span class="ts48">&nbsp;</span><span class="ts49">//Class name (cannot contain spaces)</span></p>
        <p class="ps2"><span class="ts48">{</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; </span><span class="ts47">static</span><span class="ts48">&nbsp;</span><span class="ts47">void</span><span class="ts48">&nbsp;Main()</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; {</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts49">//Your code...</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; }</span></p>
        <p class="ps2"><span class="ts48">}</span></p>
        <p class="ps0"><span class="ts10">&nbsp;</span></p>
        <p class="ps2"><span class="ts14">Hint-3:</span><span class="ts15">&nbsp;It's highly recommended to wrap your code in &quot;</span><span class="ts9">try-catch&quot;</span><span class="ts15">&nbsp;block to avoid run-time errors:</span></p>
        <p class="ps2"><span class="ts15">&nbsp;</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; </span><span class="ts47">static</span><span class="ts48">&nbsp;</span><span class="ts47">void</span><span class="ts48">&nbsp;Main()</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; {</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts47">try</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts49">//Your code...</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts47">catch</span><span class="ts48">&nbsp;(Exception)</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts49">//Exception handling (or leave it empty)</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span></p>
        <p class="ps2"><span class="ts48">&nbsp;&nbsp;&nbsp; }</span></p>
        <p class="ps0"><span class="ts10">&nbsp;</span></p>
        <p class="ps2"><span class="ts14">Hint-4:</span><span class="ts15">&nbsp;You can find more on &quot;User Manual &gt; Tab2 &gt; Samples&quot; </span></p>
      </td>
    </tr>
  </table>
</div>
</body>
</html>