<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Swap handles</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?4d16057b"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 610;
</script>
</head>
<body>
<p class="ps0"><html>
<style>
pre {
	width: 100%;
	padding: 0;
	color: #0066ff;
	margin: 0;
	overflow: auto;
	overflow-y: hidden;
	font-size: 11px;
	font-family: monospace;
	line-height: 16px;
	border: 1px solid #777;
}
</style>
<body>
<pre>

// ####################################
// ### Credits: Tekla Corporation
// ### Desc.: Swap handles
// ####################################

//Hint: Add the following Dlls to references:
//"Tekla.Structures.dll"
//"Tekla.Structures.Model.dll"
//Location: ~\[version]\nt\bin\plugins

using System;
using Tekla.Structures.Model;
using Tekla.Structures.Geometry3d;
using TSMUI = Tekla.Structures.Model.UI;
class MyClass
{
	static void Main()
	{
		try
		{
			//Set up model connection:
			Model m1 = new Model();
			//Get selected objects and put them in an enumerator/container:
			ModelObjectEnumerator MyEnum =
			(new TSMUI.ModelObjectSelector()).GetSelectedObjects();
			//Cycle through selected objects:
			while (MyEnum.MoveNext())
			{
				Beam b = MyEnum.Current as Beam;
				if (b != null)
				{
					//Create points to store old handle locations
					Point start = b.StartPoint;
					Point end = b.EndPoint;
					// Switch part handles
					b.StartPoint = end;
					b.EndPoint = start;
					// modify beam and refresh model
					b.Modify();
				}
			}
			//Update model with changes
			m1.CommitChanges();
		}
		catch (Exception)
		{ }
	}
}

</pre>
</body>
</html></p>
</body>
</html>