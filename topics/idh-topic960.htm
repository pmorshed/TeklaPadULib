<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Beam plugin (WinForm UI)</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?dbeed7f1"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 960;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps4"><span class="ts17">//## </span><span class="ts18">Description:</span><span class="ts19">&nbsp;</span><span class="ts25">Beam plug-in (with &quot;Windows Form&quot; user interface)</span><br /><span class="ts17">//## </span><span class="ts18">Credits:</span><span class="ts19">&nbsp;</span><span class="ts25">Tekla Corporation (Tekla OpenAPI Startup Package)</span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps5"><br /><span class="ts20">//Hint: Add the following Dlls to references:</span><br /><span class="ts20">//&quot;Tekla.Structures.dll&quot;</span><br /><span class="ts20">//&quot;Tekla.Structures.Model.dll&quot;</span><br /><span class="ts20">//&quot;Tekla.Structures.Plugins.dll&quot;</span><br /><span class="ts20">//&quot;Tekla.Structures.Dialogs.dll&quot;</span><br /><br /><span class="ts21">using</span><span class="ts22">&nbsp;System;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;System.Collections.Generic;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;Tekla.Structures.Geometry3d;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;Tekla.Structures.Model.UI;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;Tekla.Structures.Plugins;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;TSM = Tekla.Structures.Model;</span><br /><span class="ts21">using</span><span class="ts22">&nbsp;Tekla.Structures.Dialog;</span><br /><br /><span class="ts21">namespace</span><span class="ts22">&nbsp;BeamPlugin</span><br /><span class="ts22">{</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">class</span><span class="ts22">&nbsp;</span><span class="ts51">StructuresData</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(</span><span class="ts23">&quot;LengthFactor&quot;</span><span class="ts22">)]</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">double</span><span class="ts22">&nbsp;LengthFactor;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [StructuresField(</span><span class="ts23">&quot;Profile&quot;</span><span class="ts22">)]</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">string</span><span class="ts22">&nbsp;Profile;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;</span><span class="ts57">&lt;summary&gt;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;This is the same example found in the Open API Reference PluginBase section, </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;but implemented using Windows Forms. The plugin asks the user to pick two points.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;The plug-in then calculates new insertion points using a double parameter from the </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;dialog and creates a beam.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts57">///</span><span class="ts20">&nbsp;</span><span class="ts57">&lt;/summary&gt;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; [Plugin(</span><span class="ts23">&quot;BeamPlugin&quot;</span><span class="ts22">)] </span><span class="ts20">// Mandatory field which defines that the class is a plug-in-and stores the name of the plug-in to the system.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; [PluginUserInterface(</span><span class="ts23">&quot;BeamPlugin.BeamPluginForm&quot;</span><span class="ts22">)] </span><span class="ts20">// Mandatory field which defines the user interface the plug-in uses.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">class</span><span class="ts22">&nbsp;</span><span class="ts51">BeamPlugin</span><span class="ts22">&nbsp;: PluginBase</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;StructuresData Data { </span><span class="ts21">get</span><span class="ts22">; </span><span class="ts21">set</span><span class="ts22">; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">double</span><span class="ts22">&nbsp;_LengthFactor;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">string</span><span class="ts22">&nbsp;_Profile;</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// The constructor argument defines the database class StructuresData and set the data to be used in the plug-in.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts51">BeamPlugin</span><span class="ts22">(StructuresData data)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TSM.Model M = </span><span class="ts21">new</span><span class="ts22">&nbsp;TSM.Model();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Data = data;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Defines the inputs to be passed to the plug-in.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">override</span><span class="ts22">&nbsp;List&lt;InputDefinition&gt; DefineInput()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Picker BeamPicker = </span><span class="ts21">new</span><span class="ts22">&nbsp;Picker();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; List&lt;InputDefinition&gt; PointList = </span><span class="ts21">new</span><span class="ts22">&nbsp;List&lt;InputDefinition&gt;();</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point Point1 = BeamPicker.PickPoint();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point Point2 = BeamPicker.PickPoint();</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InputDefinition Input1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;InputDefinition(Point1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InputDefinition Input2 = </span><span class="ts21">new</span><span class="ts22">&nbsp;InputDefinition(Point2);</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Add inputs to InputDefinition list.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PointList.Add(Input1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PointList.Add(Input2);</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">return</span><span class="ts22">&nbsp;PointList;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;CreateBeam(Point Point1, Point Point2)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TSM.Beam MyBeam = </span><span class="ts21">new</span><span class="ts22">&nbsp;TSM.Beam(Point1, Point2);</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyBeam.Profile.ProfileString = _Profile;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyBeam.Finish = </span><span class="ts23">&quot;PAINT&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MyBeam.Insert();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// Gets the values from the dialog and sets the default values if needed</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;GetValuesFromDialog()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _LengthFactor = Data.LengthFactor;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _Profile = Data.Profile;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">if</span><span class="ts22">&nbsp;(IsDefaultValue(_LengthFactor))</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _LengthFactor = 2.0;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">if</span><span class="ts22">&nbsp;(IsDefaultValue(_Profile))</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; _Profile = </span><span class="ts23">&quot;HEA300&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Main method of the plug-in.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">override</span><span class="ts22">&nbsp;</span><span class="ts21">bool</span><span class="ts22">&nbsp;Run(List&lt;InputDefinition&gt; Input)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">try</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GetValuesFromDialog();</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point Point1 = (Point)(Input[0]).GetInput();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point Point2 = (Point)(Input[1]).GetInput();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point LengthVector = </span><span class="ts21">new</span><span class="ts22">&nbsp;Point(Point2.X - Point1.X, Point2.Y - Point1.Y, Point2.Z - Point1.Z);</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">if</span><span class="ts22">&nbsp;(_LengthFactor &gt; 0)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point2.X = _LengthFactor * LengthVector.X + Point1.X;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point2.Y = _LengthFactor * LengthVector.Y + Point1.Y;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Point2.Z = _LengthFactor * LengthVector.Z + Point1.Z;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CreateBeam(Point1, Point2);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">catch</span><span class="ts22">&nbsp;(Exception Ex)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; { }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">return</span><span class="ts22">&nbsp;</span><span class="ts21">true</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Defining a Windows Form UI: </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts21">class</span><span class="ts22">&nbsp;</span><span class="ts51">BeamPluginForm</span><span class="ts22">&nbsp;: PluginFormBase</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Needed fields on form:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel okApplyModifyGetOnOffCancel1;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;Tekla.Structures.Dialog.UIControls.SaveLoad saveLoad1;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;System.Windows.Forms.TextBox textBoxLengthFactor;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;System.Windows.Forms.Label LengthFactor;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;System.Windows.Forms.TextBox textBoxProfile;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;System.Windows.Forms.Label label1;</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">public</span><span class="ts22">&nbsp;</span><span class="ts51">BeamPluginForm</span><span class="ts22">()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; InitializeComponent();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;InitializeComponent()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;Tekla.Structures.Dialog.UIControls.OkApplyModifyGetOnOffCancel();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;Tekla.Structures.Dialog.UIControls.SaveLoad();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Windows.Forms.TextBox();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Windows.Forms.Label();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxProfile = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Windows.Forms.TextBox();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1 = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Windows.Forms.Label();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.SuspendLayout();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// okApplyModifyGetOnOffCancel1</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.Dock = System.Windows.Forms.DockStyle.Bottom;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(0, 246);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.Name = </span><span class="ts23">&quot;okApplyModifyGetOnOffCancel1&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(519, 29);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.TabIndex = 0;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.OkClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_OkClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.ApplyClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_ApplyClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.ModifyClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_ModifyClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.GetClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_GetClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.OnOffClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_OnOffClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1.CancelClicked += </span><span class="ts21">new</span><span class="ts22">&nbsp;System.EventHandler(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1_CancelClicked);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// saveLoad1</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.saveLoad1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.saveLoad1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.AutoSizeMode = System.Windows.Forms.AutoSizeMode.GrowAndShrink;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.saveLoad1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.Dock = System.Windows.Forms.DockStyle.Top;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.HelpFileType = Tekla.Structures.Dialog.UIControls.SaveLoad.HelpFileTypeEnum.General;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.HelpKeyword = </span><span class="ts23">&quot;&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.HelpUrl = </span><span class="ts23">&quot;&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(0, 0);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.Name = </span><span class="ts23">&quot;saveLoad1&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.SaveAsText = </span><span class="ts23">&quot;&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(519, 43);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.TabIndex = 1;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.saveLoad1.UserDefinedHelpFilePath = </span><span class="ts21">null</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// textBoxLengthFactor</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor, </span><span class="ts23">&quot;LengthFactor&quot;</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor, </span><span class="ts23">&quot;Double&quot;</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(303, 138);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor.Name = </span><span class="ts23">&quot;textBoxLengthFactor&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(100, 20);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor.TabIndex = 2;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// LengthFactor</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.LengthFactor, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.LengthFactor, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.AutoSize = </span><span class="ts21">true</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.LengthFactor, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(120, 141);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.Name = </span><span class="ts23">&quot;LengthFactor&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(70, 13);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.TabIndex = 3;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.LengthFactor.Text = </span><span class="ts23">&quot;Length factor&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// textBoxProfile</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.textBoxProfile, </span><span class="ts23">&quot;Profile&quot;</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.textBoxProfile, </span><span class="ts23">&quot;String&quot;</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.textBoxProfile, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxProfile.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(303, 90);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxProfile.Name = </span><span class="ts23">&quot;textBoxProfile&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxProfile.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(100, 20);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.textBoxProfile.TabIndex = 2;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// label1</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">.label1, </span><span class="ts21">&nbsp;null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">.label1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.AutoSize = </span><span class="ts21">true</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">.label1, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.Location = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Point(120, 93);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.Name = </span><span class="ts23">&quot;label1&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.Size = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(36, 13);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.TabIndex = 3;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.label1.Text = </span><span class="ts23">&quot;Profile&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// BeamPluginForm</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">// </span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeName(</span><span class="ts21">this</span><span class="ts22">, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetAttributeTypeName(</span><span class="ts21">this</span><span class="ts22">, </span><span class="ts21">null</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.AutoScaleDimensions = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.SizeF(6F, 13F);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.structuresExtender.SetBindPropertyName(</span><span class="ts21">this</span><span class="ts22">, </span><span class="ts21">null</span><span class="ts22">&nbsp;);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.ClientSize = </span><span class="ts21">new</span><span class="ts22">&nbsp;System.Drawing.Size(519, 275);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.label1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.textBoxProfile);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.LengthFactor);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.textBoxLengthFactor);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.saveLoad1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Controls.Add(</span><span class="ts21">this</span><span class="ts22">.okApplyModifyGetOnOffCancel1);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Name = </span><span class="ts23">&quot;BeamPluginForm&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Text = </span><span class="ts23">&quot;BeamPluginForm&quot;</span><span class="ts22">;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.ResumeLayout(</span><span class="ts21">false</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.PerformLayout();</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Use default values for plugins in models without a standard attribute file</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">protected</span><span class="ts22">&nbsp;</span><span class="ts21">override</span><span class="ts22">&nbsp;</span><span class="ts21">string</span><span class="ts22">&nbsp;LoadValuesPath(</span><span class="ts21">string</span><span class="ts22">&nbsp;fileName)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetAttributeValue(textBoxLengthFactor, 2d);&nbsp; </span><span class="ts20">// One line for each plugin attribute</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SetAttributeValue(textBoxProfile, </span><span class="ts23">&quot;HEA300&quot;</span><span class="ts22">);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">string</span><span class="ts22">&nbsp;Result = </span><span class="ts21">base</span><span class="ts22">.LoadValuesPath(fileName);</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Apply();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">return</span><span class="ts22">&nbsp;Result;</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Remember to assign these events to the buttons.</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_ApplyClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Apply();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_CancelClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Close();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_GetClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Get();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_ModifyClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Modify();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_OkClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Apply();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.Close();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">private</span><span class="ts22">&nbsp;</span><span class="ts21">void</span><span class="ts22">&nbsp;okApplyModifyGetOnOffCancel1_OnOffClicked(</span><span class="ts21">object</span><span class="ts22">&nbsp;sender, EventArgs e)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">this</span><span class="ts22">.ToggleSelection();</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp; }</span><br /><span class="ts22">}</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts16">&nbsp;</span></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts24">Usage:</span></p>
<p class="ps2"><span class="ts15">This Tekla Open API example plug-in creates a beam defined by &quot;Windows Form&quot; user input.</span></p>
<p class="ps2"><span class="ts15">User can select the length factor and profile for the beam. The plug-in asks the user to pick two points. </span></p>
<p class="ps2"><span class="ts15">Based on those points, it calculates new insertion points using a double parameter and profile from the dialog and creates a beam.</span></p>
</body>
</html>