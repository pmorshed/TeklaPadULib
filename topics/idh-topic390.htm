<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Nut list by name (size-standatd)</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?76c7e2be"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 390;
</script>
</head>
<body>
<p class="ps0"><html>
<style>
pre {
	width: 100%;
	padding: 0;
	color: #0066ff;
	margin: 0;
	overflow: auto;
	overflow-y: hidden;
	font-size: 11px;
	font-family: monospace;
	line-height: 16px;
	border: 1px solid #777;
}
</style>
<body>
<pre>

// #############################################################
// ### Author: TeklaPad
// ### Desc.: Nut list by name (size-standatd)
// ### Compatibility: TS18 or newer
// #############################################################

//Hint: nut1 and nut2 may have different standards (depends on bolt assembly catalog)

//Step-1: Gathering data for Nuts1:
//Walking through database items(selected items) and filtering "Bolts":
var nut1 = from n in Database.OfType&ltBoltGroup&gt()
//Filtering nut1:
where n.Bolt == true && n.Nut1 == true && n.GetTeklaReport("nut.weight1") > 0
group n by n.GetTeklaReport("nut.name1") into g
let Name = g.Key
let InnerD = g.First().GetTeklaReport("nut.inner diameter1")
let Number = g.Sum(x => x.GetTeklaReport("nut.number1"))
let Weight = g.Sum(x => (double)(x.GetTeklaReport("nut.weight1", 4)*x.GetTeklaReport("nut.number1")))
select new { Name, InnerD, Number, Weight };

//Step-2: Gathering data for Nuts2:
var nut2 = from n in Database.OfType&ltBoltGroup&gt()
//Filtering nut2:
where n.Bolt == true && n.Nut2 == true && n.GetTeklaReport("nut.weight2") > 0
group n by n.GetTeklaReport("nut.name2") into g
let Name = g.Key
let InnerD = g.First().GetTeklaReport("nut.inner diameter2")
let Number = g.Sum(x => x.GetTeklaReport("nut.number1"))
let Weight = g.Sum(x => (double)(x.GetTeklaReport("nut.weight2", 4)*x.GetTeklaReport("nut.number1")))
select new { Name, InnerD, Number, Weight };

//Step3: Concatenating two lists (Hint: Lists must have same column names for concatenating):
var AllNuts = nut1.Concat(nut2);

//Walking through concatenated list items:
var result = from n in AllNuts
//Grouping the concatenated list items by name and inner diameter:
group n by new { n.Name, n.InnerD } into g
let TotalNumber = g.Sum(x => x.Number)
let TotalWeight = g.Sum(x => (double)x.Weight)
select new { g.Key.Name, g.Key.InnerD, TotalNumber, TotalWeight };
//Passing the final result to the gridview:
return result;

</pre>
</body>
</html></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts12">Usage:</span></p>
<p><img width="350" height="132" border="0" src="images/image(30).png" /></p>
</body>
</html>