<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<!-- saved from url=(0025)http://www.helpsmith.com/ -->
<head>
<title>Part rebar schedule by pos by phase</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
<meta name="generator" content="HelpSmith 6.4 (Build 17.127)" />
<style type="text/css" media="screen">
html {
  height: 100%;
}
body {
  background-color: LemonChiffon;
  margin: 0.06in 0.06in 0.06in 0.06in;
}
</style>
<link type="text/css" href="../css/topics/style.css" rel="stylesheet" />
<script type="text/javascript" src="../js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="../js/settings.js?dbeed7f1"></script>
<script type="text/javascript" src="../js/core.js?e3fa3091"></script>
<script type="text/javascript" src="../js/topic.js?e3fa3091"></script>
<script type="text/javascript">
	var topicContext = 570;
</script>
</head>
<body>
<div align="left">
  <table class="tbl2">
    <tr class="row0">
      <td class="cell0">
        <p class="ps4"><span class="ts17">//## </span><span class="ts18">Author:</span><span class="ts19">&nbsp;TeklaPad</span><br /><span class="ts17">//## </span><span class="ts18">Description:</span><span class="ts19">&nbsp;</span><span class="ts25">Part rebar schedule by pos (by phase)</span><br /><span class="ts17">//## </span><span class="ts18">Compatibility:</span><span class="ts19">&nbsp;TS18 or newer</span><br /><span class="ts17">//## Hint:</span><span class="ts25">&nbsp;Make sure that numbering of objects is up to date. </span></p>
      </td>
    </tr>
    <tr class="row0">
      <td class="cell1">
        <p class="ps5"><br /><span class="ts20">//Walking through database items(selected items) and filtering &quot;Parts&quot;:</span><br /><span class="ts21">var</span><span class="ts22">&nbsp;result = </span><span class="ts21">from</span><span class="ts22">&nbsp;p </span><span class="ts21">in</span><span class="ts22">&nbsp;Database.OfType&lt;Part&gt;()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">from</span><span class="ts22">&nbsp;r </span><span class="ts21">in</span><span class="ts22">&nbsp;p.RebarList()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Removing strands and invalid shapes:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">where</span><span class="ts22">&nbsp;!(r.GetType().Name.ToUpper().Contains( </span><span class="ts23">&quot;STRAND&quot; </span><span class="ts26">))</span><span class="ts22">&nbsp;&amp;&amp; r.IsGeometryValid()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Grouping by pos and grade:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;key1 = r.GetTeklaReport(</span><span class="ts23">&quot;rebar pos&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;key2 = r.GetTeklaReport(</span><span class="ts23">&quot;grade&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;key3 = r.GetTeklaReport(</span><span class="ts23">&quot;phase&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">group</span><span class="ts22">&nbsp;r </span><span class="ts21">by</span><span class="ts22">&nbsp;</span><span class="ts21">new</span><span class="ts22">&nbsp;{ key1, key2, key3 } </span><span class="ts21">into</span><span class="ts22">&nbsp;g</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Keeping one instance (first one) from each group of data:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;rebar = g.First()</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//-------Temporary variables (Comparing values with 0.0 and replacing zero values with &quot;-&quot; ----------</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;a_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim a min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim a min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;a_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim a max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim a max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;b_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim b min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim b min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;b_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim b max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim b max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;c_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim c min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim c min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;c_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim c max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim c max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;d_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim d min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim d min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;d_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim d max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim d max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;e_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim e min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim e min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;e_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim e max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim e max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;u_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;ang u min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;ang u min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;u_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;ang u max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;ang u max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;v_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;ang v min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;ang v min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;v_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;ang v max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;ang v max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;td_min = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim td min&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim td min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;td_max = Equals(rebar.GetTeklaReport(</span><span class="ts23">&quot;dim td max&quot;</span><span class="ts22">), 0.0) ? </span><span class="ts23">&quot;-&quot;</span><span class="ts22">&nbsp;: rebar.GetTeklaReport(</span><span class="ts23">&quot;dim td max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;L_min = rebar.GetTeklaReport(</span><span class="ts23">&quot;length min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;L_max = rebar.GetTeklaReport(</span><span class="ts23">&quot;length max&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;W_min = rebar.GetTeklaReport(</span><span class="ts23">&quot;weight min&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;W_max = rebar.GetTeklaReport(</span><span class="ts23">&quot;weight max&quot;</span><span class="ts22">)</span><br /><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts20">//Defining required columns based on temporary variables:</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Phase = g.Key.key3</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Pos = g.Key.key1</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;grade = g.Key.key2</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;No = g.Sum(x =&gt; x.GetNumberOfRebars())</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Size = rebar.GetTeklaReport(</span><span class="ts23">&quot;size&quot;</span><span class="ts22">)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;length = rebar.IsTapered() ? L_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ L_max : L_min</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;Weight = rebar.IsTapered() ? W_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ W_max : W_min</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;W_Total = Math.Round(g.Sum(x =&gt; x.WeightInGroup(5)), 3)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;L_Total = Math.Round(g.Sum(x =&gt; x.LengthInGroup(5)), 3)</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;A = a_min == a_max ? a_min : a_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ a_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;B = b_min == b_max ? b_min : b_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ b_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;C = c_min == c_max ? c_min : c_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ c_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;D = d_min == d_max ? d_min : d_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ d_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;E = e_min == e_max ? e_min : e_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ e_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;U = u_min == u_max ? u_min : u_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ u_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;V = v_min == v_max ? v_min : v_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ v_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">let</span><span class="ts22">&nbsp;TD = td_min == td_max ? td_min : td_min + </span><span class="ts23">&quot;~&quot;</span><span class="ts22">&nbsp;+ td_max</span><br /><span class="ts22">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span><span class="ts21">select</span><span class="ts22">&nbsp;</span><span class="ts21">new</span><span class="ts22">&nbsp;{ Phase, Pos, Size, grade, No, length, Weight, A, B, C, D, E, U, V, TD, L_Total, W_Total };</span><br /><span class="ts20">//Passing the final result to the data grid:</span><br /><span class="ts21">return</span><span class="ts22">&nbsp;result;</span></p>
      </td>
    </tr>
  </table>
</div>
<p class="ps0"><span class="ts16">&nbsp;</span></p>
<div>
  <div class="hline0"></div>
</div>
<p class="ps0"><span class="ts24">Usage:</span></p>
<p><img width="685" height="229" border="0" src="images/image(50).png" /></p>
<p class="ps0"><span class="ts16">&nbsp;</span></p>
<p class="ps0"><span class="ts24">Usage:</span></p>
<p><img width="685" height="241" border="0" src="images/image(51).png" /></p>
<p class="ps0"><span class="ts16">&nbsp;</span></p>
</body>
</html>